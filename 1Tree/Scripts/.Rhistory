## Load dependencies
library(tidyverse)
library(ggplot2)
library(ggpubr)
## Read a file with statistics
stats <- data.frame(read.csv("../Data/total_stats.csv", sep=",", stringsAsFactors = FALSE))
View(stats)
## Calculate total genome size (chromosome + plasmid(s))
stats <- stats %>%
group_by(AssemblyID) %>%
mutate(length_total.bp. = sum(length.bp.),
total_CDSs = sum(CDSs))
## Filter out plasmids and unnecessary columns
stats_for_pic <- stats %>%
ungroup() %>%
filter(Type == 'Chromosome') %>%
mutate(total_len_kb = round(length_total.bp./1000), 0) %>%
select(organism = Organism, chrom_len_bp = length.bp., chrom_len_cds = CDSs,
total_len_kb, total_len_cds = total_CDSs,
pathovar = Info,
)
## Add a column with ISsaga counts (take the lowest number of IS)
stats_for_pic$is_num <- str_split(filter(stats, Type == "Chromosome")$ISTransposaseCount.ISsaga., "/", simplify = T)[,1]
View(stats_for_pic)
stats$is_num <- str_split(filter(stats, Type == "Chromosome")$ISTransposaseCount.ISsaga., "/", simplify = T)[,1]
## Filter out plasmids and unnecessary columns
stats_for_pic <- stats %>%
ungroup() %>%
filter(Type == 'Chromosome') %>%
mutate(total_len_kb = round(length_total.bp./1000), 0) %>%
# select(organism = Organism, chrom_len_bp = length.bp., chrom_len_cds = CDSs,
#        total_len_kb, total_len_cds = total_CDSs,
#        pathovar = Info,
)
## Filter out plasmids and unnecessary columns
stats_for_pic <- stats %>%
ungroup() %>%
filter(Type == 'Chromosome') %>%
mutate(total_len_kb = round(length_total.bp./1000), 0)# %>%
## Filter out plasmids and unnecessary columns
stats_for_pic <- stats %>%
ungroup() %>%
filter(Type == 'Chromosome') %>%
mutate(total_len_kb = round(length_total.bp./1000), 0)# %>%
## Add a column with ISsaga counts (take the lowest number of IS)
stats_for_pic$is_num <- str_split(filter(stats, Type == "Chromosome")$ISTransposaseCount.ISsaga., "/", simplify = T)[,1]
write_csv("file.txt", select(stats_for_pic, AssemblyID, is_num), col_names = F)
?write_csv
write_csv(select(stats_for_pic,"file.txt", AssemblyID, is_num), col_names = F)
??csv
write.csv(select(stats_for_pic,"file.txt", AssemblyID, is_num), col_names = F)
?write.csv
write.csv(select(stats_for_pic,"file.txt", AssemblyID, is_num), col.names = F)
write.csv(select(stats_for_pic, file="file.txt", AssemblyID, is_num), col.names = F)
write.csv(select(stats_for_pic, AssemblyID, is_num), ''file.txt', col.names = F)
write.csv(select(stats_for_pic, AssemblyID, is_num), 'file.txt', col.names = F)
write.csv(select(stats_for_pic, AssemblyID, is_num), 'file.txt', col.names = FALSE)
write.csv(select(stats_for_pic, AssemblyID, is_num), 'file.txt', col.names = FALSE, row.names = F)
write_csv(select(stats_for_pic, AssemblyID, is_num), 'file.txt', col.names = FALSE, row.names = F)
write_csv(select(stats_for_pic, AssemblyID, is_num), 'file.txt', col.names = FALSE, col_names = F)
write_csv(select(stats_for_pic, AssemblyID, is_num), 'file.txt',  col_names = F)
