library(ape)
library(reshape2)
library(tidyverse)
library(vroom)
str_split(df$X1)
str_split(df$X1, pattern = "\t")
as.matrix(str_split(df$X1, pattern = "\t"))
as.data.frame(str_split(df$X1, pattern = "\t"))
n <- length(str_split(df$X1[nrow(df)], pattern = "\t"))
str_split(df$X1[nrow(df)], pattern = "\t")
n <- length(unlist(str_split(df$X1[nrow(df)], pattern = "\t")))
as.data.frame(str_split_fixed(df$X1, pattern = "\t",n =n))
as.data.frame(str_split_fixed(df$X1, pattern = "\t", n = n))
df <- as.data.frame(str_split_fixed(df$X1, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
n <- df[1]
df <- df[-1]
df <- as.data.frame(str_split_fixed(df$X1, pattern = "\t", n = n))
n <- df[1]
n <- df[1,]
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df$X1, pattern = "\t", n = n))
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
n <- df[1,]
df <- df[-1,]
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Load dependencies
library(ape)
library(reshape2)
library(tidyverse)
library(vroom)
## Import total_stats.csv and leave only assembly names and strain names
stats <- as.data.frame(read.csv("../total_stats.csv", stringsAsFactors = F))
setwd("/Users/zairaseferbekova/ShigellaProject/2Inversions/Scripts")
## Import total_stats.csv and leave only assembly names and strain names
stats <- as.data.frame(read.csv("../total_stats.csv", stringsAsFactors = F))
## Import total_stats.csv and leave only assembly names and strain names
stats <- as.data.frame(read.csv("../Data/total_stats.csv", stringsAsFactors = F))
mapped_names <- stats %>%
filter(Type == 'Chromosome') %>%
select(genome = AssemblyID, species = Organism)
rownames(mapped_names) <- mapped_names$genome
## Import the phylogenetic tree
tree <- read.tree('../Data/Tree.nwk')
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree))
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
View(df)
n <- df[1,]
n <- as.integer(df[1,])
df <- df[-1,]
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
n <- as.integer(df[1,])
df <- df[-1]
View(df)
## Import blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
View(df)
n <- as.integer(df[1,])
df <- df[-1,]
df
View(df)
df <- as.data.frame(str_split_fixed(df$X1, pattern = "\t", n = n))
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
?str_split_fixed
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", skip=1,col_names = F, delim = '\t'))
df <- as.data.frame(str_split(df, pattern = "\t", simplify = F))
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", skip=1,col_names = F, delim = '\t'))
df <- as.data.frame(str_split(df$X1, pattern = "\t", simplify = F))
?drop
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop()
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop()
?drop_na
df[df==""] <- NA
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("~/bac_lab/sinteny_distance/cluster3.dist", col_names = F, delim = '\t'))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
?read.table
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("~/bac_lab/sinteny_distance/cluster3.dist", header = F, sep = '\t'))
View(df)
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("~/bac_lab/sinteny_distance/cluster3.dist", header = F))
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("~/bac_lab/sinteny_distance/cluster3.dist", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("~/bac_lab/sinteny_distance/cluster3.dist", header = F, sep = ',', stringsAsFactors = F))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n))
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("~/bac_lab/sinteny_distance/cluster3.dist", header = F, sep = ',', stringsAsFactors = F))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = )
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = )
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
View(joint_df)
str(df)
## Import total_stats.csv and leave only assembly names and strain names
stats <- as.data.frame(read.csv("../Data/total_stats.csv"), stringsAsFactors = F)
mapped_names <- stats %>%
filter(Type == 'Chromosome') %>%
select(genome = AssemblyID, species = Organism)
rownames(mapped_names) <- mapped_names$genome
## Import the phylogenetic tree
tree <- read.tree('../Data/Tree.nwk')
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = )
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
str(df)
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = F)
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
str(df)
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','stringsAsFactors = F))
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
str(df)
str(dist_df)
str(dist_df)
str(dist_matrix)
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = F)
str(dist_matrix)
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
str(dist_matrix)
## Transform and melt the table to plot later
dist_matrix <- droplevels(cbind(rownames(dist_matrix), dist_matrix))
str(dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
## Import total_stats.csv and leave only assembly names and strain names
stats <- as.data.frame(read.csv("../Data/total_stats.csv"), stringsAsFactors = F)
mapped_names <- stats %>%
filter(Type == 'Chromosome') %>%
select(genome = AssemblyID, species = Organism)
rownames(mapped_names) <- mapped_names$genome
## Import the phylogenetic tree
tree <- read.tree('../Data/Tree.nwk')
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = F)
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na() %>%
droplevels()
df
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() %>%
droplevels()
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
dist_df
str(dist_df)
str(droplevels(dist_df))
str(droplevels(df))
str(factor(df))
str(droplevels(df))
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
## Import total_stats.csv and leave only assembly names and strain names
stats <- as.data.frame(read.csv("../Data/total_stats.csv"), stringsAsFactors = F)
mapped_names <- stats %>%
filter(Type == 'Chromosome') %>%
select(genome = AssemblyID, species = Organism)
rownames(mapped_names) <- mapped_names$genome
## Import the phylogenetic tree
tree <- read.tree('../Data/Tree.nwk')
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = F)
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
View(df)
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
joint_df$num_blocks <- as.numeric(joint_df$num_blocks)
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
## Import total_stats.csv and leave only assembly names and strain names
stats <- as.data.frame(read.csv("../Data/total_stats.csv"), stringsAsFactors = F)
mapped_names <- stats %>%
filter(Type == 'Chromosome') %>%
select(genome = AssemblyID, species = Organism)
rownames(mapped_names) <- mapped_names$genome
## Import the phylogenetic tree
tree <- read.tree('../Data/Tree.nwk')
## Get a distance matrix from the tree
dist_matrix <- as.data.frame(cophenetic(tree), stringsAsFactors = F)
## Transform and melt the table to plot later
dist_matrix <- cbind(rownames(dist_matrix), dist_matrix)
colnames(dist_matrix)[1] <- 'genome'
dist_df <- dist_matrix %>%
melt(id.vars="genome") %>%
drop_na() # drop NAs of the upper triangle
colnames(dist_df) <- c('genome1', 'genome2', 'distance')
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,]) + 1
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n + 1), stringsAsFactors = F)
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(read.table("../Results/Distance_matrices/phylogroup_A.txt", header = F, sep = ','))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
n
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("../Results/Distance_matrices/phylogroup_A.txt", col_names = F, delim = '\t'))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n + 1), stringsAsFactors = F)
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
## Import a synteny blocks matrix for a cluster
df <- as.data.frame(vroom("../Results/Distance_matrices/phylogroup_A.txt", col_names = F, delim = '\t'))
## Transform the first column into valid names and change colnames
n <- as.integer(df[1,])
df <- df[-1,]
df <- as.data.frame(str_split_fixed(df, pattern = "\t", n = n), stringsAsFactors = F)
df[,1] <- paste0('GCA_',str_sub(df[,1], 1, 9), '.', str_sub(df[,1], 10, 10))
colnames(df)[1] <- 'genome'
colnames(df)[2:ncol(df)] <- df[,1][1:ncol(df)-1]
df[df==""] <- NA
## Melt the table to plot later
df <- df %>%
melt(id.vars="genome") %>%
drop_na()
colnames(df) <- c('genome1', 'genome2', 'num_blocks')
joint_df <- left_join(df, dist_df, by=c('genome1', 'genome2'))
joint_df$num_blocks <- as.numeric(joint_df$num_blocks)
joint_df$distance <- as.numeric(joint_df$distance)
joint_df$species1 <- mapped_names[joint_df$genome1,]$species
joint_df$species2 <- mapped_names[joint_df$genome2,]$species
joint_df$group1 <- word(joint_df$species1, 1, 1, fixed(" "))
joint_df$group2 <- word(joint_df$species2, 1, 1, fixed(" "))
ggplot(data = joint_df,
aes(x = num_blocks, y = distance)) +
geom_point(aes(color = group), size = 3) +
#geom_smooth(method = 'lm', se = F, color = "grey") +
theme_classic() + theme(text = element_text(size=15)) +
labs(x = "Number of blocks",
y = "Phylogenetic distance",
color = "2 genomes belong to")
joint_df <- joint_df %>%
mutate(group = ifelse((group1 == 'Escherichia') & (group2 == 'Escherichia'), '2 E.coli',
ifelse((group1 == 'Shigella') & (group2 == 'Shigella'), '2 Shigella', 'Shigella & E.coli')))
ggplot(data = joint_df,
aes(x = num_blocks, y = distance)) +
geom_point(aes(color = group), size = 3) +
#geom_smooth(method = 'lm', se = F, color = "grey") +
theme_classic() + theme(text = element_text(size=15)) +
labs(x = "Number of blocks",
y = "Phylogenetic distance",
color = "2 genomes belong to")
clearPushBack()
clean
